    //APPROACH
    //WE USE MAP AND STORE EACH STRING CORRESPONDING MINUTES IN VECTOR AND THEN SORT THE VECTOR OF MINUTES OF EACH STRING AND THEN SIMPLE CHECK IF THEIR
    //DIFFERENCE BETWEEN TIMES<=60 AND IF WE GET ACESS TIMES >= 3 TIMES WITHIN IN A ONE-HOUR PERIOD THEN WE SIMPLY PUT THIS STRING IN MY ANSWER VECTOR
    /*
        T.C = O(N*(k+NLOGN)) WHERE K IS LENGTH OF MINUTES
        S.C = O(N)+O(N)~O(N)
    */
    
    bool isValid(vector<int>&times)
    {
        for(int i=0;i<times.size()-2;i++)
        {
            if(times[i+2]-times[i]<60)
            {
                return true;
            }
        }
        return false;
    }
    vector<string> findHighAccessEmployees(vector<vector<string>>& access_times) {
       vector<string>ans;
        unordered_map<string,vector<int>>unmp;
        for(auto x:access_times)
        {
            string hour = x[1].substr(0,2);
            string min = x[1].substr(2,2);
            int minute = stoi(hour)*60+stoi(min);
            unmp[x[0]].push_back(minute);
        }
        for(auto it:unmp)
        {
            if(it.second.size()<3)
            {
                continue;
            }
            sort(it.second.begin(),it.second.end());
            if(isValid(it.second))
            {
                ans.push_back(it.first);
            }
        }
        return ans;
    }
